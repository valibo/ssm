<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration   PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 指定MyBatis的日志实现使用。如果此设置是不存在的记录的实施将自动查找 -->
		<!-- mybatis的日志打印方式比较多， SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING 
			| STDOUT_LOGGING | NO_LOGGING，可以根据自己的需要进行配置 -->
		<!-- <setting name="logImpl" value="STDOUT_LOGGING" /> -->
		<!-- 这个配置使全局的映射器启用或禁用 缓存。 -->
		<!-- <setting name="cacheEnabled" value="true" /> -->
		<!-- 全局启用或禁用延迟加载。当禁用时, 所有关联对象都会即时加载 -->
		<!-- <setting name="lazyLoadingEnabled" value="true" /> -->
		<!-- 允许或不允许多种结果集从一个单独 的语句中返回(需要适合的驱动) -->
		<!-- <setting name="multipleResultSetsEnabled" value="true" /> -->
		<!-- 使用列标签代替列名。 不同的驱动在这 方便表现不同。 参考驱动文档或充分测 试两种方法来决定所使用的驱动 -->
		<!-- <setting name="useColumnLabel" value="true" /> -->
		<!-- 允许 JDBC 支持生成的键。 需要适合的 驱动。如果设置为 true 则这个设置强制 生成的键被使用, 尽管一些驱动拒绝兼 容但仍然有效(比如 
			Derby) -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 指定 MyBatis 如何自动映射列到字段/ 属性。PARTIAL 只会自动映射简单, 没有嵌套的结果。FULL 会自动映射任 意复杂的结果(嵌套的或其他情况) -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 配置默认的执行器。SIMPLE 执行器没 有什么特别之处。REUSE 执行器重用 预处理语句。BATCH 执行器重用语句 和批量更新 -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 驼峰 -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<!-- 设置超时时间, 它决定驱动等待一个数 据库响应的时间 -->
		<!-- <setting name="defaultStatementTimeout" value="25" /> <setting name="safeRowBoundsEnabled" 
			value="false" /> <setting name="mapUnderscoreToCamelCase" value="false" /> 
			<setting name="localCacheScope" value="SESSION" /> <setting name="jdbcTypeForNull" 
			value="OTHER" /> <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" 
			/> -->


	</settings>
	<typeAliases>
		<package name="org.valibo.crud.bean" />
	</typeAliases>
	<!-- 分页插件 -->
	<plugins>
		<plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
	</plugins>
	
</configuration>